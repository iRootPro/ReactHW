{"version":3,"sources":["components/Message/Message.module.css","components/NavBar/NavBar.module.css","components/common/Input/Input.module.css","components/common/Button/Button.module.css","components/common/CheckBox/CheckBox.module.css","components/Message/Message.tsx","components/common/Button/Button.tsx","components/Task/Task.tsx","components/common/Input/Input.tsx","components/common/CheckBox/CheckBox.tsx","components/AllComminComponents/AllCommonComponnents.tsx","components/PreJunior/PreJunior.tsx","components/NavBar/NavBar.tsx","components/Header/Header.tsx","components/EditableSpan/EditableSpan.tsx","components/Junior/Junior.tsx","components/JuniorPlus/JuniorPlus.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","container","messageWrap","author","message","time","Button","classes","class","onClick","callBackHandler","name","Task","useState","id","n","p","tasks","setTasks","filter","setFilter","taskForList","priority","task","map","key","filteredTasks","removedTaskById","Input","error","label","type","value","onChange","e","currentTarget","autoFocus","onBlur","CheckBox","checked","AllCommonComponents","setValue","onChangeInputHandler","newValue","check","setCheck","onChangeCheckBoxHandler","PreJunior","NavBar","ListItem","ListItemIcon","to","activeClassName","active","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","open","setOpen","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Drawer","anchor","onClose","style","width","List","EditableSpan","editMode","setEditMode","onDoubleClick","Junior","valueSpan","setValueSpan","localStorage","setItem","valueFromLocalStorage","getItem","JuniorPlus","App","v1","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.0a636662.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Message_container__1oZBM\",\"messageWrap\":\"Message_messageWrap__14uj5\",\"author\":\"Message_author__Znw1e\",\"message\":\"Message_message__kVpdt\",\"time\":\"Message_time__2LRPv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__yNL3i\",\"active\":\"NavBar_active__1HRI5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"green-input\":\"Input_green-input__e9HhJ\",\"red-input\":\"Input_red-input__3KMbS\",\"standard-input\":\"Input_standard-input__2dIqA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"standard-btn\":\"Button_standard-btn__1z3fh\",\"green-btn\":\"Button_green-btn__3gAow\",\"red-btn\":\"Button_red-btn__1vwr9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"small-checkbox\":\"CheckBox_small-checkbox__VY1t6\",\"middle-checkbox\":\"CheckBox_middle-checkbox__sGVGC\",\"big-checkbox\":\"CheckBox_big-checkbox__I7fq8\"};","import React from \"react\";\nimport s from './Message.module.css'\n\ntype PropsType = {\n    author: string,\n    message: string,\n    time: string\n}\n\nexport const Message = (props: PropsType) => {\n    return (\n        <div className={s.container}>\n            <div className={s.messageWrap}>\n                <div className={s.author}>{props.author}</div>\n                <p className={s.message}>{props.message}</p>\n                <div className={s.time}>{props.time}</div>\n            </div>\n\n        </div>\n    )\n}","import React from \"react\";\nimport classes from './Button.module.css'\n\ntype PropsType = {\n    name: string\n    class: 'standard-btn' | 'green-btn' | 'red-btn'\n    callBackHandler?: () => void\n}\n\nexport function Button(props: PropsType) {\n    return (\n            <button className={classes[props.class]} onClick={props.callBackHandler}>{props.name}</button>\n    )\n}","import React, {useState} from 'react'\nimport {Button} from \"../common/Button/Button\";\n\ntype TaskType = {\n    id: number\n    n: string\n    p: 'hight' | 'low' | 'middle' | 'all'\n}\n\ntype FilteredType = 'all' | 'low' | 'middle' | 'high'\n\nconst tasks: Array<TaskType> =\n    [\n        {id: 1, n: \"работа\", p: \"hight\"},\n        {id: 2, n: \"аниме\", p: \"low\"},\n        {id: 3, n: \"игры\", p: \"middle\"},\n        {id: 4, n: \"реакт\", p: \"hight\"},\n        {id: 5, n: \"хтмл\", p: \"low\"}\n    ]\n\n\nfunction Task() {\n\n    let [tasks, setTasks] = useState(\n        [\n            {id: 1, n: \"работа\", p: \"high\"},\n            {id: 2, n: \"аниме\", p: \"low\"},\n            {id: 3, n: \"игры\", p: \"middle\"},\n            {id: 4, n: \"реакт\", p: \"high\"},\n            {id: 5, n: \"хтмл\", p: \"low\"}\n        ]\n    )\n\n    let [filter, setFilter] = useState<FilteredType>('all')\n\n    let taskForList = tasks\n\n    if (filter === 'low') taskForList = taskForList.filter(task => task.p === 'low')\n    if (filter === 'middle') taskForList = taskForList.filter(task => task.p === 'middle')\n    if (filter === 'high') taskForList = taskForList.filter(task => task.p === 'high')\n\n    function removedTaskById(id: number) {\n        let filteredTasks = tasks.filter(task => task.id !== id)\n        setTasks(filteredTasks)\n    }\n\n    function priority(p: FilteredType) {\n        setFilter(p)\n    }\n\n    const lowButtonHandler = () => priority('low')\n    const middleButtonHandler = () => priority('middle')\n    const highButtonHandler = () => priority('high')\n    const allButtonHandler = () => priority('all')\n\n\n    return (\n        <div>\n            <h1>My tasks:</h1>\n            <ul>\n                {taskForList.map(task =>\n                    <li key={task.id}>{task.n} : {task.p}\n                        <Button class={\"standard-btn\"} name={'X'} callBackHandler={() => removedTaskById(task.id)}/>\n                    </li>)}\n            </ul>\n            <Button name={'Low'} class={\"standard-btn\"} callBackHandler={lowButtonHandler}/>\n            <Button name={'Middle'} class={\"standard-btn\"} callBackHandler={middleButtonHandler}/>\n            <Button name={'High'} class={\"standard-btn\"} callBackHandler={highButtonHandler}/>\n            <Button name={'All'} class={\"standard-btn\"} callBackHandler={allButtonHandler}/>\n\n        </div>\n    )\n}\n\n\nexport default Task\n\n","import React from \"react\";\nimport classes from './Input.module.css'\n\ntype PropsType = {\n    class: 'green-input' | 'red-input' | 'standard-input'\n    label?: string\n    message?: string\n    error?: string\n    onChange: (value: string) => void\n    value: string\n    autoFocus?: boolean\n    onBlur?: () => void\n}\n\nexport function Input(props: PropsType) {\n    return (\n        <div className={props.error ? classes['red-input'] : classes[props.class]}>\n            <label>{props.label}</label>\n            <input\n                type=\"text\"\n                value={props.value}\n                onChange={e => props.onChange(e.currentTarget.value)}\n                autoFocus={props.autoFocus ? true : false}\n                onBlur={props.onBlur}\n            />\n            <div>{props.message}</div>\n        </div>\n    )\n}\n","import React, {ChangeEvent} from \"react\";\nimport classes from './CheckBox.module.css'\n\n\ntype PropsType = {\n    checked: boolean\n    class: 'big-checkbox' | 'middle-checkbox' | 'small-checkbox'\n    onChange: (check: boolean) => void\n}\n\n\n\nexport function CheckBox(props: PropsType) {\n    return (\n        <div>\n            <input type=\"checkbox\"\n                   className={classes[props.class]}\n                   checked={props.checked}\n                   onChange={e => props.onChange(e.currentTarget.checked)}\n            />\n        </div>\n\n    )\n}","import React, {useState} from \"react\";\nimport {Input} from \"../common/Input/Input\";\nimport {Button} from \"../common/Button/Button\";\nimport {CheckBox} from \"../common/CheckBox/CheckBox\";\n\n\nfunction AllCommonComponents() {\n    const [value, setValue] = useState<string>('')\n\n    const onChangeInputHandler = (newValue: string) => {\n        setValue(newValue)\n    }\n\n\n    const [check, setCheck] = useState<boolean>(false)\n    const onChangeCheckBoxHandler = (newValue: boolean) => {\n        setCheck(!check)\n    }\n\n    return (\n        <div>\n            <div>My common components:</div>\n            <hr/>\n            <div>Inputs</div>\n            <div>\n                <Input\n                    label={'Username'}\n                    message={'Username is required'}\n                    class={'green-input'}\n                    onChange={onChangeInputHandler}\n                    value={value}\n                />\n                <Input\n                    label={'Password'}\n                    message={'Password is required'}\n                    class={'red-input'}\n                    onChange={onChangeInputHandler}\n                    value={value}\n                />\n                <Input\n                    class={'standard-input'}\n                    onChange={onChangeInputHandler}\n                    value={value}\n                />\n            </div>\n            <br/>\n            <br/>\n            <hr/>\n            <div>Buttons:</div>\n            <div>\n                <Button class={'standard-btn'} name={'OK'}/>\n                <Button class={'red-btn'} name={'Cancel'}/>\n                <Button class={'green-btn'} name={'Submit'}/>\n            </div>\n            <hr/>\n            <div>CheckBoxes</div>\n\n            <div>\n                <CheckBox checked={check} class={'small-checkbox'} onChange={onChangeCheckBoxHandler}/>\n                <CheckBox checked={check} class={'middle-checkbox'} onChange={onChangeCheckBoxHandler}/>\n                <CheckBox checked={check} class={'big-checkbox'} onChange={onChangeCheckBoxHandler} />\n            </div>\n\n        </div>\n    )\n}\n\nexport default AllCommonComponents","import React from \"react\";\nimport {Message} from \"../Message/Message\";\nimport Task from \"../Task/Task\";\nimport {HelloName} from \"../HelloName/HelloName\";\nimport AllCommonComponents from \"../AllComminComponents/AllCommonComponnents\";\n\nexport function PreJunior() {\n    return (\n        <div>\n            <div><h1>preJunior Page</h1></div>\n            <Message author={'Alex'} message={'Hi, how are you?'} time={'20:00'}/>\n            <Message author={'Sasha'} message={'Hi,fine'} time={'20:01'}/>\n            <Message author={'Petr'} message={'Hello, friends'} time={'20:02'}/>\n            <Task/>\n            <div><h2>Add new user</h2></div>\n            {/*<HelloName addUser={addUser} getCountUsers={getCountUsers}/>*/}\n            <AllCommonComponents/>\n        </div>\n    )\n}","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport HomeIcon from '@material-ui/icons/Home';\nimport ChevronRightTwoToneIcon from '@material-ui/icons/ChevronRightTwoTone';\nimport {ListItemIcon} from \"@material-ui/core\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport classes from './NavBar.module.css'\n\nexport function NavBar() {\n    return (\n        <div>\n            <ListItem>\n                <ListItemIcon><ChevronRightTwoToneIcon/></ListItemIcon>\n                <NavLink to={'/preJunior'} activeClassName={classes.active}>preJunior</NavLink>\n            </ListItem>\n            <ListItem>\n                <ListItemIcon><ChevronRightTwoToneIcon/></ListItemIcon>\n                <NavLink to={'/Junior'} activeClassName={classes.active}>Junior</NavLink>\n            </ListItem>\n            <ListItem>\n                <ListItemIcon><ChevronRightTwoToneIcon/></ListItemIcon>\n                <NavLink to={'/JuniorPlus'} activeClassName={classes.active}>Junior+</NavLink>\n            </ListItem>\n        </div>\n    )\n}","import React, {useState} from \"react\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {Drawer} from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport {NavBar} from \"../NavBar/NavBar\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nexport function Header() {\n\n    const [open, setOpen] = useState<boolean>(false)\n    const onCloseMenuHandler = () => {\n        setOpen(false)\n    }\n\n    const onClickOpenMenuHandler = () => {\n        setOpen(true)\n    }\n    const classes = useStyles();\n    // @ts-ignore\n    return (\n        <div>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton onClick={onClickOpenMenuHandler} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        React HomeWork\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n            anchor={\"left\"}\n            open={open}\n            onClose={onCloseMenuHandler}\n            style={{width: 200}}\n            >\n                <List>\n                    <NavBar/>\n                </List>\n\n            </Drawer>\n        </div>\n\n    )\n}","import React, {ChangeEvent, useState} from \"react\";\nimport {Input} from \"../common/Input/Input\";\n\ntype PropsType = {\n    value: string\n    onChange: (value: string) => void\n}\n\nexport function EditableSpan(props: PropsType) {\n\n    let [editMode, setEditMode] = useState<boolean>(false)\n\n    const dblClickSpanHandler = () => {\n        setEditMode(true)\n    }\n\n    const onchangeInputHandler = (value: string) => {\n        props.onChange(value)\n    }\n\n    const onBlurHandler = () => {\n        setEditMode(false)\n    }\n\n    return (\n        <div>\n            {editMode ?\n                <Input\n                    autoFocus={true}\n                    value={props.value}\n                    onChange={onchangeInputHandler}\n                    class={'standard-input'}\n                    onBlur={onBlurHandler}/>\n                : <span\n                    onDoubleClick={dblClickSpanHandler}>\n                    {props.value}\n            </span>}\n        </div>\n    )\n}","import React, {useState} from \"react\";\nimport {EditableSpan} from \"../EditableSpan/EditableSpan\";\n\nexport function Junior() {\n\n    let [valueSpan, setValueSpan] = useState('Default value')\n\n    const onChangeEditableHandler = (value: string) => {\n        setValueSpan(value)\n    }\n\n    const saveToLocalStorage = () => {\n        localStorage.setItem('value', valueSpan)\n    }\n\n    const restoreFromLocalStorage = () => {\n        const valueFromLocalStorage = localStorage.getItem('value')\n        if (valueFromLocalStorage) setValueSpan(valueFromLocalStorage)\n    }\n    return (\n        <div><h1>Junior Page</h1>\n        <div><h3>Editable component</h3></div>\n           <EditableSpan value={valueSpan} onChange={onChangeEditableHandler}/>\n           <div>\n               <button onClick={saveToLocalStorage}>Save to Local Storage</button>\n               <button onClick={restoreFromLocalStorage}>Restore from Local Storage</button>\n           </div>\n        </div>\n    )\n}","import React from \"react\";\n\nexport function JuniorPlus() {\n    return (\n        <div><h1>Junior+ Page</h1></div>\n    )\n}","import React, {useState} from 'react';\nimport './App.css';\nimport {v1} from \"uuid\";\nimport {HashRouter, NavLink, Route} from \"react-router-dom\";\nimport {PreJunior} from \"./components/PreJunior/PreJunior\";\nimport {Header} from \"./components/Header/Header\";\nimport {Junior} from \"./components/Junior/Junior\";\nimport {JuniorPlus} from \"./components/JuniorPlus/JuniorPlus\";\n\n\nfunction App() {\n    type UserType = {\n        id: string\n        name: string\n    }\n\n    let [users, SetUsers] = useState<Array<UserType>>([\n        {id: v1(), name: 'Alex'},\n        {id: v1(), name: 'Sasha'},\n        {id: v1(), name: 'Petr'}\n    ])\n\n    const addUser = (newUser: string) => {\n        let user = {\n            id: v1(),\n            name: newUser\n        }\n        let newUsers = [user, ...users]\n        SetUsers(newUsers)\n    }\n\n    const getCountUsers = () => {\n        return users.length\n    }\n\n\n    return (\n        <div className=\"App\">\n\n            <HashRouter>\n                <Header/>\n                <Route path={'/preJunior'} component={PreJunior}/>\n                <Route path={'/Junior'} component={Junior}/>\n                <Route path={'/JuniorPlus'} component={JuniorPlus}/>\n            </HashRouter>\n        </div>\n\n    );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}