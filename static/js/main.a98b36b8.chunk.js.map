{"version":3,"sources":["components/Message/Message.tsx","components/common/Button/Button.tsx","components/Task/Task.tsx","components/common/Input/Input.tsx","components/common/CheckBox/CheckBox.tsx","components/AllComminComponents/AllCommonComponnents.tsx","components/PreJunior/PreJunior.tsx","components/NavBar/NavBar.tsx","components/Header/Header.tsx","components/EditableSpan/EditableSpan.tsx","components/common/Select/Select.tsx","components/common/Radio/Radio.tsx","homeWorkReducer.ts","components/Time/Time.tsx","components/common/Preloader/Preloader.tsx","redux/preloader-reducer.ts","components/common/Range/Range.tsx","components/common/2Range/TwoRange.tsx","components/Junior/Junior.tsx","redux/theme-reducer.ts","api/request.ts","components/Request/Request.tsx","components/JuniorPlus/JuniorPlus.tsx","App.tsx","serviceWorker.ts","state/store.ts","index.tsx","components/Message/Message.module.css","components/NavBar/NavBar.module.css","components/common/Input/Input.module.css","components/common/Range/Range.module.css","components/JuniorPlus/JuniorPlus.module.css","components/common/Button/Button.module.css","components/common/CheckBox/CheckBox.module.css","assets/img/preloader.svg"],"names":["Message","props","className","s","container","messageWrap","author","message","time","Button","React","memo","classes","class","onClick","callBackHandler","name","Task","useState","id","n","p","tasks","setTasks","filter","setFilter","taskForList","priority","task","map","key","filteredTasks","removedTaskById","Input","error","label","type","value","onChange","e","currentTarget","autoFocus","onBlur","CheckBox","checked","AllCommonComponents","setValue","onChangeInputHandler","newValue","check","setCheck","onChangeCheckBoxHandler","PreJunior","NavBar","ListItem","ListItemIcon","to","activeClassName","active","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","open","setOpen","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Drawer","anchor","onClose","style","width","List","EditableSpan","editMode","setEditMode","onDoubleClick","Select","arr","item","index","Radio","hwReducer","state","action","payload","sort","a","b","man","age","Time","timerId","setTimerId","moment","format","setTime","date","setDate","showBlock","setShowBlock","styles","display","height","padding","border","borderRadius","onMouseEnter","onMouseLeave","clearInterval","window","setInterval","Preloader","src","preloader","alt","initialState","loading","changeStatusLoadingAC","isLoading","Range","callBackRangeChange","useCallback","input","min","minValue","max","maxValue","TwoRange","minValueFrom","maxValueFrom","fromValue","valueFrom","onChangeFromPrice","minValueBefore","maxValueBefore","beforeValue","valueBefore","onChangeBeforePrice","Junior","valueSpan","setValueSpan","valueSelect","setValueSelect","valueRadio","setValueRadio","people","setPeople","valueRange","setValueRange","setValueFrom","setValueBefore","onChangeEditableHandler","onChangeHandler","onChangeRadioHandler","upButtonHandler","downButtonHandler","checkButtonHandler","onChangeRangeHandler","onChangeFromPriceHandler","onChangeBeforePriceHandler","useSelector","dispatch","useDispatch","loadingButtonHandler","setTimeout","localStorage","setItem","valueFromLocalStorage","getItem","requestApi","isChecked","axios","post","success","Request","response","setResponse","checkBoxHandler","onClickHandler","then","res","JSON","stringify","data","info","catch","JuniorPlus","changeThemeHandler","changeTheme","light","dark","App","path","component","Boolean","location","hostname","match","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","module","exports"],"mappings":"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","file":"static/js/main.a98b36b8.chunk.js","sourcesContent":["import React from \"react\";\nimport s from './Message.module.css'\n\ntype PropsType = {\n    author: string,\n    message: string,\n    time: string\n}\n\nexport const Message = (props: PropsType) => {\n    return (\n        <div className={s.container}>\n            <div className={s.messageWrap}>\n                <div className={s.author}>{props.author}</div>\n                <p className={s.message}>{props.message}</p>\n                <div className={s.time}>{props.time}</div>\n            </div>\n\n        </div>\n    )\n}","import React from \"react\";\nimport classes from './Button.module.css'\n\ntype PropsType = {\n    name: string\n    class: 'standard-btn' | 'green-btn' | 'red-btn'\n    callBackHandler?: () => void\n}\n\nexport const Button = React.memo((props: PropsType) => {\n    return (\n            <button className={classes[props.class]} onClick={props.callBackHandler}>{props.name}</button>\n    )\n})","import React, {useState} from 'react'\nimport {Button} from \"../common/Button/Button\";\n\ntype FilteredType = 'all' | 'low' | 'middle' | 'high'\n\nfunction Task() {\n\n    let [tasks, setTasks] = useState(\n        [\n            {id: 1, n: \"работа\", p: \"high\"},\n            {id: 2, n: \"аниме\", p: \"low\"},\n            {id: 3, n: \"игры\", p: \"middle\"},\n            {id: 4, n: \"реакт\", p: \"high\"},\n            {id: 5, n: \"хтмл\", p: \"low\"}\n        ]\n    )\n\n    let [filter, setFilter] = useState<FilteredType>('all')\n\n    let taskForList = tasks\n\n    if (filter === 'low') taskForList = taskForList.filter(task => task.p === 'low')\n    if (filter === 'middle') taskForList = taskForList.filter(task => task.p === 'middle')\n    if (filter === 'high') taskForList = taskForList.filter(task => task.p === 'high')\n\n    function removedTaskById(id: number) {\n        let filteredTasks = tasks.filter(task => task.id !== id)\n        setTasks(filteredTasks)\n    }\n\n    function priority(p: FilteredType) {\n        setFilter(p)\n    }\n\n    const lowButtonHandler = () => priority('low')\n    const middleButtonHandler = () => priority('middle')\n    const highButtonHandler = () => priority('high')\n    const allButtonHandler = () => priority('all')\n\n\n    return (\n        <div>\n            <h1>My tasks:</h1>\n            <ul>\n                {taskForList.map(task =>\n                    <li key={task.id}>{task.n} : {task.p}\n                        <Button class={\"standard-btn\"} name={'X'} callBackHandler={() => removedTaskById(task.id)}/>\n                    </li>)}\n            </ul>\n            <Button name={'Low'} class={\"standard-btn\"} callBackHandler={lowButtonHandler}/>\n            <Button name={'Middle'} class={\"standard-btn\"} callBackHandler={middleButtonHandler}/>\n            <Button name={'High'} class={\"standard-btn\"} callBackHandler={highButtonHandler}/>\n            <Button name={'All'} class={\"standard-btn\"} callBackHandler={allButtonHandler}/>\n\n        </div>\n    )\n}\n\n\nexport default Task\n\n","import React from \"react\";\nimport classes from './Input.module.css'\n\ntype PropsType = {\n    class: 'green-input' | 'red-input' | 'standard-input'\n    label?: string\n    message?: string\n    error?: string\n    onChange: (value: string) => void\n    value: string\n    autoFocus?: boolean\n    onBlur?: () => void\n}\n\nexport const Input = React.memo((props: PropsType) => {\n    return (\n        <div className={props.error ? classes['red-input'] : classes[props.class]}>\n            <label>{props.label}</label>\n            <input\n                type=\"text\"\n                value={props.value}\n                onChange={e => props.onChange(e.currentTarget.value)}\n                autoFocus={props.autoFocus ? true : false}\n                onBlur={props.onBlur}\n            />\n            <div>{props.message}</div>\n        </div>\n    )\n})\n","import React from \"react\";\nimport classes from './CheckBox.module.css'\n\n\ntype PropsType = {\n    checked: boolean\n    class: 'big-checkbox' | 'middle-checkbox' | 'small-checkbox'\n    onChange: (check: boolean) => void\n}\n\n\n\nexport const CheckBox = React.memo((props: PropsType) => {\n    return (\n        <div>\n            <input type=\"checkbox\"\n                   className={classes[props.class]}\n                   checked={props.checked}\n                   onChange={e => props.onChange(e.currentTarget.checked)}\n            />\n        </div>\n    )\n})","import React, {useState} from \"react\";\nimport {Input} from \"../common/Input/Input\";\nimport {Button} from \"../common/Button/Button\";\nimport {CheckBox} from \"../common/CheckBox/CheckBox\";\n\n\nfunction AllCommonComponents() {\n    const [value, setValue] = useState<string>('')\n\n    const onChangeInputHandler = (newValue: string) => {\n        setValue(newValue)\n    }\n\n\n    const [check, setCheck] = useState<boolean>(false)\n    const onChangeCheckBoxHandler = (newValue: boolean) => {\n        setCheck(!check)\n    }\n\n    return (\n        <div>\n            <div>My common components:</div>\n            <hr/>\n            <div>Inputs</div>\n            <div>\n                <Input\n                    label={'Username'}\n                    message={'Username is required'}\n                    class={'green-input'}\n                    onChange={onChangeInputHandler}\n                    value={value}\n                />\n                <Input\n                    label={'Password'}\n                    message={'Password is required'}\n                    class={'red-input'}\n                    onChange={onChangeInputHandler}\n                    value={value}\n                />\n                <Input\n                    class={'standard-input'}\n                    onChange={onChangeInputHandler}\n                    value={value}\n                />\n            </div>\n            <br/>\n            <br/>\n            <hr/>\n            <div>Buttons:</div>\n            <div>\n                <Button class={'standard-btn'} name={'OK'}/>\n                <Button class={'red-btn'} name={'Cancel'}/>\n                <Button class={'green-btn'} name={'Submit'}/>\n            </div>\n            <hr/>\n            <div>CheckBoxes</div>\n\n            <div>\n                <CheckBox checked={check} class={'small-checkbox'} onChange={onChangeCheckBoxHandler}/>\n                <CheckBox checked={check} class={'middle-checkbox'} onChange={onChangeCheckBoxHandler}/>\n                <CheckBox checked={check} class={'big-checkbox'} onChange={onChangeCheckBoxHandler} />\n            </div>\n\n        </div>\n    )\n}\n\nexport default AllCommonComponents","import React from \"react\";\nimport {Message} from \"../Message/Message\";\nimport Task from \"../Task/Task\";\nimport AllCommonComponents from \"../AllComminComponents/AllCommonComponnents\";\n\nexport function PreJunior() {\n    return (\n        <div>\n            <div><h1>preJunior Page</h1></div>\n            <Message author={'Alex'} message={'Hi, how are you?'} time={'20:00'}/>\n            <Message author={'Sasha'} message={'Hi,fine'} time={'20:01'}/>\n            <Message author={'Petr'} message={'Hello, friends'} time={'20:02'}/>\n            <Task/>\n            <div><h2>Add new user</h2></div>\n            <AllCommonComponents/>\n        </div>\n    )\n}","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport ChevronRightTwoToneIcon from '@material-ui/icons/ChevronRightTwoTone';\nimport {ListItemIcon} from \"@material-ui/core\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport classes from './NavBar.module.css'\n\nexport function NavBar() {\n    return (\n        <div>\n            <ListItem>\n                <ListItemIcon><ChevronRightTwoToneIcon/></ListItemIcon>\n                <NavLink to={'/preJunior'} activeClassName={classes.active}>preJunior</NavLink>\n            </ListItem>\n            <ListItem>\n                <ListItemIcon><ChevronRightTwoToneIcon/></ListItemIcon>\n                <NavLink to={'/Junior'} activeClassName={classes.active}>Junior</NavLink>\n            </ListItem>\n            <ListItem>\n                <ListItemIcon><ChevronRightTwoToneIcon/></ListItemIcon>\n                <NavLink to={'/JuniorPlus'} activeClassName={classes.active}>Junior+</NavLink>\n            </ListItem>\n        </div>\n    )\n}","import React, {useState} from \"react\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {Drawer} from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport {NavBar} from \"../NavBar/NavBar\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nexport function Header() {\n\n    const [open, setOpen] = useState<boolean>(false)\n    const onCloseMenuHandler = () => {\n        setOpen(false)\n    }\n\n    const onClickOpenMenuHandler = () => {\n        setOpen(true)\n    }\n    const classes = useStyles();\n    // @ts-ignore\n    return (\n        <div>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton onClick={onClickOpenMenuHandler} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        React HomeWork\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n            anchor={\"left\"}\n            open={open}\n            onClose={onCloseMenuHandler}\n            style={{width: 200}}\n            >\n                <List>\n                    <NavBar/>\n                </List>\n\n            </Drawer>\n        </div>\n\n    )\n}","import React, {useState} from \"react\";\nimport {Input} from \"../common/Input/Input\";\n\ntype PropsType = {\n    value: string\n    onChange: (value: string) => void\n}\n\nexport function EditableSpan(props: PropsType) {\n\n    let [editMode, setEditMode] = useState<boolean>(false)\n\n    const dblClickSpanHandler = () => {\n        setEditMode(true)\n    }\n\n    const onchangeInputHandler = (value: string) => {\n        props.onChange(value)\n    }\n\n    const onBlurHandler = () => {\n        setEditMode(false)\n    }\n\n    return (\n        <div>\n            {editMode ?\n                <Input\n                    autoFocus={true}\n                    value={props.value}\n                    onChange={onchangeInputHandler}\n                    class={'standard-input'}\n                    onBlur={onBlurHandler}/>\n                : <span\n                    onDoubleClick={dblClickSpanHandler}>\n                    {props.value}\n            </span>}\n        </div>\n    )\n}","import React, {ChangeEvent} from \"react\";\n\n\ntype PropsType = {\n    arr: Array<string>\n    onChange: (value: string) => void\n    value: string\n}\n\n\nexport const Select = React.memo((props: PropsType) => {\n    const onChange = (e: ChangeEvent<HTMLSelectElement>) => {\n        if (e.currentTarget.value) {\n            props.onChange(e.currentTarget.value)\n        }\n\n    }\n    return (\n        <select onChange={onChange} value={props.value}>\n            {\n                props.arr.map((item, index) => {\n                    return (\n                        <option key={index} value={item}>{item}</option>\n                    )\n                })\n            }\n        </select>\n    )\n})","import React, {ChangeEvent} from \"react\";\n\ntype PropsType = {\n    value: string\n    name: string\n    onChange: (value: string) => void\n    arr: Array<string>\n}\n\n\nexport const Radio = React.memo((props: PropsType) => {\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n        props.onChange(e.currentTarget.value)\n    }\n    return (\n        <>\n            {\n                props.arr.map((item, index) => (\n                    <div key={index}>\n                        <label key={index}>{item}\n                            <input\n                                type={'radio'}\n                                checked={props.value === item}\n                                value={item}\n                                name={props.name}\n                                onChange={onChange}\n                                key={index}/>\n                        </label>\n                    </div>))\n            }\n        </>\n    )\n})","\nexport type StateType = {\n    id: string\n    name: string\n    age: number\n}\n\ntype SortActionType = {\n    type: 'SORT'\n    payload: 'up' | 'down'\n}\n\ntype CheckActionType = {\n    type: 'CHECK'\n    payload: number\n}\n\ntype ActionsTypes = ReturnType<typeof sortUpActionCreator>  |\n    ReturnType<typeof sortDownActionCreator> |\n    ReturnType<typeof checkDownActionCreator>\n\nexport const sortUpActionCreator = () => ({type: 'SORT', payload: 'up'})\nexport const sortDownActionCreator = () => ({type: 'SORT', payload: 'down'})\nexport const checkDownActionCreator = () => ({type: 'CHECK', payload: '18'})\n\n\nexport const hwReducer = (\n    state: Array<StateType>,\n    action: ActionsTypes) => {\n    switch (action.type) {\n        case 'SORT':\n            if (action.payload === 'up') {\n                return [...state.sort((a, b) => (a.name > b.name) ? 1 : -1)]\n            }\n\n            if (action.payload === 'down') {\n                return [...state.sort((a, b) => (a.name < b.name) ? 1 : -1)]\n            }\n            return [...state]\n        case 'CHECK':\n            return [...state.filter(man => man.age === 18)]\n        default:\n            return []\n    }\n};\n","import React, {useState} from \"react\";\nimport moment from \"moment/moment\";\nimport {Button} from \"@material-ui/core\";\n\n\nexport function Time() {\n    const [timerId, setTimerId] = useState<number>()\n    const [time, setTime] = useState(moment().format('LTS'))\n    const [date, setDate] = useState(moment().format('LL'))\n    const [showBlock, setShowBlock] = useState<boolean>(false)\n\n    const startHandler = () => {\n        clearInterval(timerId)\n        const id = window.setInterval(() => setTime(moment().format('LTS')), 1000)\n        setDate(moment().format('LL'))\n        setTimerId(id)\n    }\n\n    const stopHandler = () => {\n        clearInterval(timerId)\n    }\n\n    const onMouseMoveHandler = () => {\n        setShowBlock(true)\n    }\n    const onMouseOverHandler = () => {\n        setShowBlock(false)\n    }\n\n    const styles = {\n        display: showBlock ? 'inline' : 'none',\n        width: '300px',\n        height: '50px',\n        padding: '15px',\n        border: '1px solid #ccc',\n        borderRadius: '10px',\n        color: '#0000cc',\n    }\n    return (\n        <div>\n            <div>\n                <h2>Task 9</h2>\n            </div>\n            <div onMouseEnter={onMouseMoveHandler} onMouseLeave={onMouseOverHandler}>\n                {time}\n                <div style={styles}>\n                    {date}\n                </div>\n            </div>\n\n            <div>\n                <Button onClick={startHandler}>Start</Button>\n                <Button onClick={stopHandler}>Stop</Button>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport preloader from \"./../../../assets/img/preloader.svg\"\n\nconst Preloader = React.memo(() => {\n    return (\n        <img src={preloader} alt=\"preloader\"/>\n    )\n})\n\nexport default Preloader","export type loaderStateType = {\n    loading: boolean\n}\n\ntype changeStatusLoadingActionType = {\n    type: 'changeStatusLoading'\n    isLoading: boolean\n}\n\nconst initialState: loaderStateType = {\n    loading: false\n}\n\ntype ActionType = ReturnType<typeof changeStatusLoadingAC>\n\n\nexport const loaderReducer = (state: loaderStateType = initialState, action: ActionType) => {\n    switch (action.type) {\n        case 'changeStatusLoading':\n            return {...state, loading: action.isLoading}\n        default:\n            return state\n    }\n}\n\nexport const changeStatusLoadingAC = (isLoading: boolean): changeStatusLoadingActionType => {\n    return {type: 'changeStatusLoading', isLoading}\n}","import React, {ChangeEvent, useCallback} from \"react\";\nimport classes from \"./Range.module.css\"\n\ntype PropsRangeType = {\n    minValue: number\n    maxValue: number\n    value: number\n    onChange: (value: number) => void\n}\n\nexport const Range = React.memo((props: PropsRangeType) => {\n\n    const callBackRangeChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        props.onChange(+e.currentTarget.value)\n    }, [props])\n    return (\n        <div className={classes.container}>\n                <div> <input className={classes.input} type={\"range\"} min={props.minValue} max={props.maxValue} value={props.value} onChange={callBackRangeChange}/></div>\n                <div><span>{props.value}</span></div>\n        </div>\n    )\n})","import React from \"react\";\nimport {Range} from \"../Range/Range\";\n\ntype PropsTwoRangeType = {\n    minValueFrom: number\n    maxValueFrom: number\n    minValueBefore: number\n    maxValueBefore: number\n    fromValue: number\n    beforeValue: number\n    onChangeFromPrice: (value: number) => void\n    onChangeBeforePrice: (value: number) => void\n\n}\n\nexport const TwoRange = React.memo((props: PropsTwoRangeType) => {\n    const fromPriceHandler = (valueFrom: number) => {\n        props.onChangeFromPrice(valueFrom)\n    }\n    const beforePriceHandler = (valueBefore: number) => {\n        props.onChangeBeforePrice(valueBefore)\n    }\n    return (\n        <div>\n          <div><span>$ from</span> <Range minValue={props.minValueFrom} maxValue={props.maxValueFrom} value={props.fromValue} onChange={fromPriceHandler}/></div>\n          <div><span># before</span> <Range minValue={props.minValueBefore} maxValue={props.maxValueBefore} value={props.beforeValue} onChange={beforePriceHandler}/></div>\n        </div>\n    )\n})","import React, {useCallback, useState} from \"react\";\nimport {EditableSpan} from \"../EditableSpan/EditableSpan\";\nimport {Select} from \"../common/Select/Select\";\nimport {Radio} from \"../common/Radio/Radio\";\nimport {Button} from '../common/Button/Button'\nimport {hwReducer} from \"../../homeWorkReducer\";\nimport {Time} from \"../Time/Time\"\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../state/store\";\nimport {changeStatusLoadingAC, loaderStateType} from \"../../redux/preloader-reducer\";\nimport {Range} from \"../common/Range/Range\"\nimport {TwoRange} from \"../common/2Range/TwoRange\";\n\nexport function Junior() {\n\n    let [valueSpan, setValueSpan] = useState('Default value')\n    let [valueSelect, setValueSelect] = useState('one')\n    let [valueRadio, setValueRadio] = useState('one')\n    let [people, setPeople] = useState<Array<{ id: string, name: string, age: number }>>(\n        [\n            {id: '1', name: 'Alex', age: 18},\n            {id: '2', name: 'Sasha', age: 9},\n            {id: '3', name: 'Anastasiya', age: 35},\n            {id: '4', name: 'Ivan', age: 15},\n            {id: '5', name: 'Lena', age: 18},\n        ]\n    )\n    let [valueRange, setValueRange] = useState<number>(0)\n    let [valueFrom, setValueFrom] = useState<number>(0)\n    let [valueBefore, setValueBefore] = useState<number>(0)\n\n    const onChangeEditableHandler = useCallback((value: string) => {\n        setValueSpan(value)\n    }, [setValueSpan])\n\n    const saveToLocalStorage = () => {\n        localStorage.setItem('value', valueSpan)\n    }\n\n    const restoreFromLocalStorage = () => {\n        const valueFromLocalStorage = localStorage.getItem('value')\n        if (valueFromLocalStorage) setValueSpan(valueFromLocalStorage)\n    }\n\n    const onChangeHandler = useCallback((value: string) => {\n        setValueSelect(value)\n    }, [setValueSelect])\n    const onChangeRadioHandler = useCallback((value: string) => {\n        setValueRadio(value)\n    }, [setValueRadio])\n\n    const upButtonHandler = useCallback(() => {\n        setPeople(hwReducer(people, {type: 'SORT', payload: 'up'}))\n    }, [setPeople, people])\n\n    const downButtonHandler = useCallback(() => {\n        setPeople(hwReducer(people, {type: 'SORT', payload: 'down'}))\n    }, [setPeople, people])\n    const checkButtonHandler = useCallback(() => {\n        setPeople(hwReducer(people, {type: 'CHECK', payload: '18'}))\n    }, [setPeople, people])\n\n    const onChangeRangeHandler = useCallback((value: number) => {\n        setValueRange(value)\n    }, [setValueRange])\n\n    const onChangeFromPriceHandler = useCallback((value: number) => {\n        setValueFrom(value)\n    }, [setValueFrom])\n\n    const onChangeBeforePriceHandler = useCallback((value: number) => {\n        setValueBefore(value)\n    }, [setValueBefore])\n\n    const loading = useSelector<AppRootStateType, loaderStateType>(state => state.loading)\n    let dispatch = useDispatch()\n\n    const loadingButtonHandler = useCallback(() => {\n        dispatch(changeStatusLoadingAC(true))\n        setTimeout(() => {\n            dispatch(changeStatusLoadingAC(false))\n        }, 3000)\n    }, [dispatch])\n\n    return (\n        <div><h1>Junior Page</h1>\n            <div><h3>Editable component</h3></div>\n            <EditableSpan value={valueSpan} onChange={onChangeEditableHandler}/>\n            <div>\n                <button onClick={saveToLocalStorage}>Save to Local Storage</button>\n                <button onClick={restoreFromLocalStorage}>Restore from Local Storage</button>\n            </div>\n            <div>\n                <div>\n                    <h3>Select component</h3>\n                </div>\n                <div>\n                    <Select arr={['one', 'two', 'three']} onChange={onChangeHandler} value={valueSelect}/>\n                </div>\n            </div>\n            <div>\n                <div>\n                    <h3>Radio component</h3>\n                </div>\n                <div>\n                    <Radio\n                        arr={['one', 'two', 'three']}\n                        onChange={onChangeRadioHandler}\n                        value={valueRadio}\n                        name={'test'}/>\n                </div>\n            </div>\n            <div><h3>hwReducer</h3></div>\n            <div>\n                {people.map(man => <div key={man.id}>id: {man.id}, name: {man.name}, age: {man.age}</div>)}\n            </div>\n            <div style={{padding: '10px'}}>\n                <Button class={\"standard-btn\"} name={'UP'} callBackHandler={upButtonHandler}/>\n                <Button class={\"standard-btn\"} name={'DOWN'} callBackHandler={downButtonHandler}/>\n                <Button class={\"standard-btn\"} name={'18'} callBackHandler={checkButtonHandler}/>\n            </div>\n            <Time/>\n            <div>\n                <h2>Preloader</h2>\n                <div>\n                    <div> {loading.loading ? <Preloader/> : null} </div>\n                    <button onClick={loadingButtonHandler}>Loading</button>\n                </div>\n            </div>\n            <div>\n                <h2>Range common component</h2>\n                <Range minValue={0} maxValue={10} value={valueRange} onChange={onChangeRangeHandler}/>\n            </div>\n            <div>\n                <h2>2 Range</h2>\n                <TwoRange\n                    minValueFrom={0}\n                    maxValueFrom={100}\n                    minValueBefore={0}\n                    maxValueBefore={50}\n                    fromValue={valueFrom}\n                    beforeValue={valueBefore}\n                    onChangeFromPrice={onChangeFromPriceHandler}\n                    onChangeBeforePrice={onChangeBeforePriceHandler}/>\n            </div>\n        </div>\n    )\n}","const CHANGE_THEME = 'CHANGE_THEME'\n\nexport type themeStateType = {\n    theme: typeThemes\n}\n\nexport const initialState: themeStateType = {\n    theme: \"light\"\n}\n\nexport type typeThemes = \"light\" | \"dark\" | string\n\ntype themeActionType = ReturnType<typeof changeTheme>\n\nexport const themeReducer = (state: themeStateType = initialState, action: themeActionType) => {\n    switch (action.type) {\n        case CHANGE_THEME:\n            return {...state, theme: action.theme}\n        default:\n            return state\n    }\n\n}\n\nexport const changeTheme = (theme: typeThemes) => {return {type: CHANGE_THEME, theme}}","import axios from \"axios\";\n\nexport const requestApi = {\n    postRequest(isChecked: boolean) {\n        return axios.post('https://neko-cafe-back.herokuapp.com/auth/test', {\n            success: isChecked\n        })\n    }\n}","import React, {ChangeEvent, useCallback, useState} from \"react\";\nimport {requestApi} from \"../../api/request\";\n\nexport const Request = React.memo(() => {\n\n    const [response, setResponse] = useState<string>('')\n\n    let isChecked: boolean = false\n\n    const checkBoxHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        isChecked = e.currentTarget.checked\n    }, [])\n\n    const onClickHandler = useCallback(() => {\n        requestApi.postRequest(isChecked)\n            .then(res => setResponse(JSON.stringify(res.data.info)))\n            .catch(e => setResponse(JSON.stringify(e.message)))\n    }, [isChecked])\n\n    return (\n        <div>\n            <input type={'button'} value={'Request'} onClick={onClickHandler}/>\n            <input type={'checkbox'} onChange={(e) => checkBoxHandler(e)}/>\n            <div>\n                { response === '' ? 'no request' : response }\n            </div>\n        </div>\n    )\n})","import React, {useCallback} from \"react\";\nimport {Radio} from \"../common/Radio/Radio\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../state/store\";\nimport {changeTheme, themeStateType} from \"../../redux/theme-reducer\";\nimport classes from \"./JuniorPlus.module.css\"\nimport {Request} from \"../Request/Request\";\n\nexport function JuniorPlus() {\n    const theme = useSelector<AppRootStateType, themeStateType>(state => state.theme)\n    const dispatch = useDispatch()\n\n    const changeThemeHandler = useCallback((value: string) => {\n        dispatch(changeTheme(value))\n    }, [dispatch])\n    return (\n        <div className={ theme.theme === \"light\" ? classes.light: classes.dark }>\n            <h1>Junior+ Page</h1>\n            <div><span>Change theme: </span><Radio value={theme.theme} name={'theme'} onChange={changeThemeHandler} arr={['light', 'dark']}/></div>\n            <div>\n                <h2>Request to server API</h2>\n                <Request/>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport './App.css';\nimport {HashRouter, Route} from \"react-router-dom\";\nimport {PreJunior} from \"./components/PreJunior/PreJunior\";\nimport {Header} from \"./components/Header/Header\";\nimport {Junior} from \"./components/Junior/Junior\";\nimport {JuniorPlus} from \"./components/JuniorPlus/JuniorPlus\";\n\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n            <HashRouter>\n                <Header/>\n                <Route path={'/preJunior'} component={PreJunior}/>\n                <Route path={'/Junior'} component={Junior}/>\n                <Route path={'/JuniorPlus'} component={JuniorPlus}/>\n            </HashRouter>\n        </div>\n\n    );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers, createStore} from \"redux\";\nimport {loaderReducer} from \"../redux/preloader-reducer\";\nimport {themeReducer} from \"../redux/theme-reducer\";\n\nconst rootReducer = combineReducers({\n    loading: loaderReducer,\n    theme: themeReducer\n})\n\nexport const store = createStore(rootReducer)\n\nexport type AppRootStateType = ReturnType<typeof rootReducer>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./state/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App/>\n        </React.StrictMode>\n\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Message_container__1oZBM\",\"messageWrap\":\"Message_messageWrap__14uj5\",\"author\":\"Message_author__Znw1e\",\"message\":\"Message_message__kVpdt\",\"time\":\"Message_time__2LRPv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__yNL3i\",\"active\":\"NavBar_active__1HRI5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"green-input\":\"Input_green-input__e9HhJ\",\"red-input\":\"Input_red-input__3KMbS\",\"standard-input\":\"Input_standard-input__2dIqA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Range_container__5G6b6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"light\":\"JuniorPlus_light__1d09x\",\"dark\":\"JuniorPlus_dark__tWdPZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"standard-btn\":\"Button_standard-btn__1z3fh\",\"green-btn\":\"Button_green-btn__3gAow\",\"red-btn\":\"Button_red-btn__1vwr9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"small-checkbox\":\"CheckBox_small-checkbox__VY1t6\",\"middle-checkbox\":\"CheckBox_middle-checkbox__sGVGC\",\"big-checkbox\":\"CheckBox_big-checkbox__I7fq8\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.f273afa1.svg\";"],"sourceRoot":""}